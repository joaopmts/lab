{"timestamp":"2025-08-24T06:00:00.203750","level":"error","event":"Failed to import plugin /opt/airflow/plugins/hook/spark_hook.py","logger":"airflow.plugins_manager","error_detail":[{"exc_type":"IndentationError","exc_value":"unindent does not match any outer indentation level (spark_hook.py, line 28)","exc_notes":[],"syntax_error":{"offset":68,"filename":"/opt/airflow/plugins/hook/spark_hook.py","line":"         spark = (spark.config(\"spark.driver.extraClassPath\", dcp) \n","lineno":28,"msg":"unindent does not match any outer indentation level"},"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/plugins_manager.py","lineno":293,"name":"load_plugins_from_plugin_directory"},{"filename":"<frozen importlib._bootstrap_external>","lineno":995,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap_external>","lineno":1133,"name":"get_code"},{"filename":"<frozen importlib._bootstrap_external>","lineno":1063,"name":"source_to_code"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-08-24T06:00:00.327664","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-24T06:00:00.328014","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/reddit_dag_generator_one_file.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-24T06:00:00.552780","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-24T06:00:00.560455","level":"info","event":"Connection Retrieved 'reddit_default'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-24T06:01:23.195162","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0198daa9-872b-7f8a-834b-7beae01f1c3a'), task_id='reddit_search', dag_id='reddit_one_file', run_id='scheduled__2025-08-24T06:00:00+00:00', try_number=1, map_index=-1, hostname='a485218d480e', context_carrier={}, task=<Task(RedditOperator): reddit_search>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 8, 24, 6, 0, 0, 107944, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/reddit_one_file/runs/scheduled__2025-08-24T06%3A00%3A00%2B00%3A00/tasks/reddit_search?try_number=1')","logger":"task"}
